{
    "openapi": "3.0.0",
    "info": {
        "title": "uSocial API",
        "description": "API documentation for uSocial",
        "version": "1.0.0"
    },
    "paths": {
        "/api/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "operationId": "d764dd091cc4494ae0baf360b03319f3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "User's full name",
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "description": "User's email address",
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "description": "User's password",
                                        "type": "string",
                                        "format": "password",
                                        "example": "Test123!"
                                    },
                                    "password_confirmation": {
                                        "description": "Password confirmation",
                                        "type": "string",
                                        "format": "password",
                                        "example": "Test123!"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The email field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login a user",
                "operationId": "8dcb70df1020986038d098cc08d05dae",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "User's email address",
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "description": "User's password",
                                        "type": "string",
                                        "format": "password",
                                        "example": "Test123!"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "example-api-token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid login credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid login credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The email field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout the authenticated user",
                "operationId": "69281b12abb272c76871f19cb17ca563",
                "responses": {
                    "200": {
                        "description": "User logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/me": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get authenticated user's details",
                "operationId": "9392fee05bff1ebdef7215807a1796aa",
                "responses": {
                    "200": {
                        "description": "Authenticated user details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "User ID",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "description": "User's full name",
                                            "type": "string",
                                            "example": "John Doe"
                                        },
                                        "email": {
                                            "description": "User's email address",
                                            "type": "string",
                                            "format": "email",
                                            "example": "johndoe@example.com"
                                        },
                                        "created_at": {
                                            "description": "Account creation date",
                                            "type": "string",
                                            "format": "datetime",
                                            "example": "2024-01-01T12:00:00Z"
                                        },
                                        "updated_at": {
                                            "description": "Last account update date",
                                            "type": "string",
                                            "format": "datetime",
                                            "example": "2024-01-02T12:00:00Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/refresh-token": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh access and refresh tokens",
                "operationId": "d293d02cfa895a696bb2f9180bf517b1",
                "responses": {
                    "200": {
                        "description": "Tokens refreshed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                        },
                                        "refresh_token": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/chat/unlock": {
            "post": {
                "tags": [
                    "Chat"
                ],
                "summary": "Unlock chat with an influencer",
                "description": "Deduct gems from the user and unlock chat with the specified influencer.",
                "operationId": "4a13d5b6b3f7748a5fa67d460d240612",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "influencer_id"
                                ],
                                "properties": {
                                    "influencer_id": {
                                        "description": "ID of the influencer to unlock chat with",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Chat unlocked successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Chat unlocked successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Not enough gems or chat already unlocked",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not enough gems"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Influencer not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Influencer not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/influencers/become": {
            "post": {
                "tags": [
                    "Influencers"
                ],
                "summary": "Become an influencer",
                "operationId": "4b2a956f3fe42f475631c5635f3097a3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "bio",
                                    "gem_cost_per_dm"
                                ],
                                "properties": {
                                    "bio": {
                                        "description": "The bio of the user",
                                        "type": "string",
                                        "maxLength": 1000
                                    },
                                    "gem_cost_per_dm": {
                                        "description": "Cost of gems per direct message",
                                        "type": "integer",
                                        "minimum": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfully became an influencer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You are now an influencer"
                                        },
                                        "influencer": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 123
                                                },
                                                "bio": {
                                                    "type": "string",
                                                    "example": "Passionate influencer about tech and gadgets"
                                                },
                                                "gem_cost_per_dm": {
                                                    "type": "integer",
                                                    "example": 10
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "User is already an influencer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User is already an influencer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "bio": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The bio field is required."
                                                    }
                                                },
                                                "gem_cost_per_dm": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The gem_cost_per_dm must be at least 1."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/influencers": {
            "get": {
                "tags": [
                    "Influencers"
                ],
                "summary": "List all influencers",
                "description": "Retrieve a paginated list of all influencers, excluding the authenticated user's influencer profile if they are an influencer.",
                "operationId": "listInfluencers",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of influencers per page (default is 10).",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with a paginated list of influencers.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "description": "Current page number.",
                                            "type": "integer"
                                        },
                                        "data": {
                                            "description": "List of influencers.",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "Influencer ID.",
                                                        "type": "integer"
                                                    },
                                                    "user_id": {
                                                        "description": "User ID of the influencer.",
                                                        "type": "integer"
                                                    },
                                                    "bio": {
                                                        "description": "Bio of the influencer.",
                                                        "type": "string"
                                                    },
                                                    "gem_cost_per_dm": {
                                                        "description": "Gem cost per direct message.",
                                                        "type": "integer"
                                                    },
                                                    "created_at": {
                                                        "description": "Timestamp of when the influencer was created.",
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "description": "Timestamp of when the influencer was last updated.",
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "total": {
                                            "description": "Total number of influencers.",
                                            "type": "integer"
                                        },
                                        "per_page": {
                                            "description": "Number of influencers per page.",
                                            "type": "integer"
                                        },
                                        "last_page": {
                                            "description": "Last page number.",
                                            "type": "integer"
                                        },
                                        "next_page_url": {
                                            "description": "URL of the next page.",
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "prev_page_url": {
                                            "description": "URL of the previous page.",
                                            "type": "string",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, missing or invalid token.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/purchase-gems": {
            "post": {
                "tags": [
                    "Gems"
                ],
                "summary": "Purchase gems for the authenticated user",
                "operationId": "a185d4728bbdf0ea5f5c2a51257a6997",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "paymentMethodId",
                                    "amount"
                                ],
                                "properties": {
                                    "paymentMethodId": {
                                        "description": "Stripe payment method ID",
                                        "type": "string"
                                    },
                                    "amount": {
                                        "description": "Number of gems to purchase",
                                        "type": "integer",
                                        "minimum": 1,
                                        "example": 10
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Payment successful"
                                        },
                                        "transaction": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 123
                                                },
                                                "amount": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "transaction_type": {
                                                    "type": "string",
                                                    "example": "purchase"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "completed"
                                                },
                                                "stripe_transaction_id": {
                                                    "type": "string",
                                                    "example": "ch_1Nm6x2FEXAMPLE"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Payment failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Payment failed"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Card declined"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/create-intent": {
            "post": {
                "tags": [
                    "Gems"
                ],
                "summary": "Create a payment intent for purchasing gems",
                "description": "Generates a payment intent for the given gem amount. Requires the user to be authenticated.",
                "operationId": "5d7531259a8654a7b480401cca6e6e7b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "amount"
                                ],
                                "properties": {
                                    "amount": {
                                        "description": "Number of gems to purchase",
                                        "type": "integer",
                                        "example": 5
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Client secret for the payment intent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "clientSecret": {
                                            "description": "Client secret for Stripe payment intent",
                                            "type": "string",
                                            "example": "pi_1EydQl2eZvKYlo2Cxl97"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "The amount field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Something went wrong while processing the payment intent."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/finalize-purchase": {
            "post": {
                "tags": [
                    "Gems"
                ],
                "summary": "Finalize the purchase of gems",
                "description": "Completes the gem purchase by recording the transaction and updating the user's gem balance. Requires the user to be authenticated.",
                "operationId": "c21a35d27277935c3f15d49520405296",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "paymentId",
                                    "amount"
                                ],
                                "properties": {
                                    "paymentId": {
                                        "description": "Stripe payment ID",
                                        "type": "string",
                                        "example": "pi_1EyjdV2eZvKYlo2Cxl98"
                                    },
                                    "amount": {
                                        "description": "Number of gems purchased",
                                        "type": "integer",
                                        "example": 10
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment finalized successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success message",
                                            "type": "string",
                                            "example": "Payment finalized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "The paymentId field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Chat",
            "description": "Chat"
        },
        {
            "name": "Influencers",
            "description": "Influencers"
        },
        {
            "name": "Gems",
            "description": "Gems"
        }
    ]
}